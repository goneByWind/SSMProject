<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lanou.mapper.AdminInfoMapper">
  <resultMap id="BaseResultMap" type="com.lanou.bean.AdminInfo">
    <id column="admin_id" jdbcType="INTEGER" property="adminId" />
    <result column="admin_code" jdbcType="VARCHAR" property="adminCode" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="enrolldate" jdbcType="TIMESTAMP" property="enrolldate" />
  </resultMap>
  <resultMap id="AdminRoleResultMap" type="com.lanou.bean.AdminInfo">
    <id column="admin_id" jdbcType="INTEGER" property="adminId" />
    <result column="admin_code" jdbcType="VARCHAR" property="adminCode" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="enrolldate" jdbcType="TIMESTAMP" property="enrolldate" />
    <collection property="roleInfoList"
                column="admin_id"
                select="com.lanou.mapper.RoleInfoMapper.findRoleInfoListByAdminId"/>
  </resultMap>
  <sql id="Base_Column_List">
    admin_id, admin_code, password, name, telephone, email, enrolldate
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin_info
    where admin_id = #{adminId,jdbcType=INTEGER}
  </select>
  <!--用于role-admin多对多-->
  <select id="findAdminInfoListByRoleId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM admin_info
    WHERE admin_id IN (SELECT admin_id FROM admin_role WHERE role_id = #{roleId} )
  </select>
  <!--级联显示全部-->
  <select id="findAll" resultMap="AdminRoleResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM admin_info
  </select>
  <!--通过adminCode查找Admin对象-->
  <select id="findByAdminCode" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM admin_info
    WHERE admin_code=#{adminCode}
  </select>
  <!--通过adminId查找,用有级联的resultMaop-->
  <select id="findAdminByIdWithCascade" resultMap="AdminRoleResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM admin_info
    WHERE admin_id=#{adminId}
  </select>
  <!--模糊查询,查询admin,条件为roleName(模糊匹配)和moduleId-->
  <select id="selectByInfo" resultMap="AdminRoleResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM admin_info
    WHERE admin_id IN (
    SELECT a.admin_id FROM admin_info a
    LEFT JOIN admin_role ar ON a.admin_id=ar.admin_id
    LEFT JOIN role_info ri ON ri.role_id=ar.role_id
    LEFT JOIN role_module rm ON rm.role_id=ri.role_id
    <where>
      <if test="moduleId!=null">
        AND rm.module_id=#{moduleId}
      </if>
      <if test="roleName!=null &amp;&amp; roleName.length()>0">
        AND ri.name LIKE CONCAT(CONCAT('%',#{roleName}),'%')
      </if>
    </where>
    )
  </select>
    <select id="findAdminByName" resultMap="BaseResultMap">
      SELECT <include refid="Base_Column_List" />
      FROM admin_info
      WHERE name=#{adminName}
    </select>
  <select id="findAdminByAdminCode" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List" />
    FROM admin_info
    WHERE admin_code=#{adminCode}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from admin_info
    where admin_id = #{adminId,jdbcType=INTEGER}
  </delete>
  <!--通过adminId删除中间表admin_role中的条目-->
  <delete id="deleteAdminRolesByAdminId">
    DELETE FROM admin_role
    WHERE admin_id = #{adminId}
  </delete>
  <insert id="insert" parameterType="com.lanou.bean.AdminInfo">
    insert into admin_info (admin_id, admin_code, password, 
      name, telephone, email, 
      enrolldate)
    values (#{adminId,jdbcType=INTEGER}, #{adminCode,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{enrolldate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lanou.bean.AdminInfo">
    insert into admin_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="adminCode != null">
        admin_code,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="enrolldate != null">
        enrolldate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="adminId != null">
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="adminCode != null">
        #{adminCode,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="enrolldate != null">
        #{enrolldate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <!--插入中间表admin_role-->
  <insert id="saveAdminRole" parameterType="java.lang.Integer">
    INSERT INTO admin_role (admin_id,role_id)
    VALUES (#{adminId,jdbcType=INTEGER},#{roleId,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lanou.bean.AdminInfo">
    update admin_info
    <set>
      <if test="adminCode != null">
        admin_code = #{adminCode,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="enrolldate != null">
        enrolldate = #{enrolldate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lanou.bean.AdminInfo">
    update admin_info
    set admin_code = #{adminCode,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      enrolldate = #{enrolldate,jdbcType=TIMESTAMP}
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>
</mapper>